generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
    AUNTIE
    DAD
    FRIEND
    GRANDDAD
    GRANDMA
    ME
    MUM
    NO_RELATION
    UNCLE
}

model User {
  id       String  @id @default(dbgenerated("gracie.uuid_generate_v4()")) @db.Uuid
  name     String? @db.VarChar(255)
  password String? @db.VarChar(255)
  role  Role    @default(NO_RELATION)
  posts    UsersOnPosts[]
  isAdmin  Boolean @map("is_admin") @db.Boolean @default(false)

  @@map("users")
}

model Post {
  id               String  @id @default(dbgenerated("gracie.uuid_generate_v4()")) @db.Uuid
  title            String @db.VarChar(255)
  date             DateTime           @default(now())
  body             String?     @db.Text
  contributors     UsersOnPosts[]
  media     Media[]

  @@map("posts")
}

model UserPostRole {
  id       String  @id @default(dbgenerated("gracie.uuid_generate_v4()")) @db.Uuid
  name     String @unique @db.VarChar(50)
  usersOnPosts UsersOnPosts[]

  @@map("user_post_role")
}

model UsersOnPosts {
  post            Post          @relation(fields: [postId], references: [id])
  postId          String        @map("post_id") @db.Uuid
  user            User          @relation(fields: [userId], references: [id])
  userId          String        @map("user_id") @db.Uuid
  userPostRole    UserPostRole  @relation(fields: [userPostRoleId], references: [id])
  userPostRoleId  String        @map("user_post_role_id") @db.Uuid

  @@id([postId, userId])
  @@map("users_on_posts")
}

enum MediaType {
    IMAGE
}

model Media {
  id           String  @id                   @default(dbgenerated("gracie.uuid_generate_v4()")) @db.Uuid
  title        String?  @db.VarChar(255)
  caption      String? @db.Text
  url          String  @db.VarChar(255)
  postId String @map("post_id") @db.Uuid
  post Post @relation(fields: [postId], references: [id])
  type  MediaType    @default(IMAGE)

  @@map("media")
}
